{"version":3,"sources":["pages/pageNotFound/index.tsx","components/navigation/MultiTierSearch.tsx","components/text/headers/GradientHeader.tsx","components/text/headers/growth-lab.png"],"names":["PageNotFound","title","hasSearch","imageSrc","backgroundColor","textColor","linkColor","links","label","target","SearchContainer","styled","div","SearchLabel","Label","HeaderWithSearch","props","searchLabelText","data","initialSelectedValue","useState","selectedValue","setSelectedValue","useEffect","keydownListener","e","focusedElm","document","querySelector","keyCode","click","window","addEventListener","removeEventListener","placeholder","selectedClass","searchPredicate","node","searchTerm","toLowerCase","indexOf","className","includes","onChange","currentNode","selectedNodes","length","activeInput","activeElement","blur","mode","keepTreeOnSearch","texts","clearSearchOnChange","Root","FullWidthHeader","GradientContainer","rgba","ContentGrid","FullWidthHeaderContent","LogoContainer","Logo","img","imgWidth","imgHeight","TitleContainer","secondaryFont","Title","StandardH1","GrowthLabLogoContainer","a","ButtonContainer","ButtonLink","primaryColor","secondaryColor","imageProps","linkElms","map","internal","href","undefined","key","buttons","searchBar","MultiTierSearch","src","alt","style","gridColumn","color","GrowthLabLogoImgSrc","module","exports"],"mappings":"0IAAA,mCAqBeA,UAlBM,WACnB,OACE,oCACE,kBAAC,IAAD,CACEC,MAAO,uDACPC,WAAW,EACXC,SAAU,GACVC,gBAAiB,OACjBC,UAAW,OACXC,UAAW,OACXC,MAAO,CACL,CAACC,MAAO,yBAA0BC,OAAQ,W,yHCL9CC,G,YAAkBC,IAAOC,IAAV,uFAAGD,CAAH,qDAMfE,EAAcF,YAAOG,KAAV,mFAAGH,CAAH,qDAoEFI,EAxDU,SAACC,GAAkB,IACnCC,EAA+CD,EAA/CC,gBAAiBC,EAA8BF,EAA9BE,KAAMC,EAAwBH,EAAxBG,qBADW,EAGCC,mBAA+BD,GAHhC,mBAGlCE,EAHkC,KAGnBC,EAHmB,KAKzCC,qBAAU,WACR,IAAMC,EAAkB,SAACC,GACvB,IAAMC,EAAiCC,SAASC,cAAc,wCAC1DF,GAA4B,KAAdD,EAAEI,SAClBH,EAAWI,SAIf,OADAC,OAAOC,iBAAiB,UAAWR,GAC5B,kBAAMO,OAAOE,oBAAoB,UAAWT,OAGrD,IAqBMU,EAAcb,GAAiBA,EAAcb,MAAQa,EAAcb,MAAQ,iBAC3E2B,EAAgBd,GAAiBA,EAAcb,MAAQ,sBAAwB,GACrF,OACE,kBAACE,EAAD,KACE,kBAACG,EAAD,KAAcI,GACd,kBAAC,IAAD,CACEmB,gBAdkB,SAACC,EAAgBC,GACvC,WAASD,EAAK7B,OAAS6B,EAAK7B,MAAM+B,cAAcC,QAAQF,IAAe,IAC9DD,EAAKI,WAAaJ,EAAKI,UAAUC,SAAS,sBAC7B,KAAfJ,IAYHG,UAAW,uBAAyBN,EACpCjB,KAAMA,EACNyB,SA9BW,SAACC,EAAuBC,GACnCA,EAAcC,SAChBxB,EAAiBsB,GACb5B,EAAM2B,UACR3B,EAAM2B,SAASC,IAGnB,IAAMG,EAAcpB,SAASqB,cACzBD,GACFA,EAAYE,QAsBVC,KAAM,cACNC,kBAAkB,EAClBC,MAAO,CAAClB,eACRmB,qBAAqB,M,yBC9DvBC,EAAO3C,YAAO4C,KAAV,uEAAG5C,CAAH,mCAIJ6C,EAAoB7C,IAAOC,IAAV,oFAAGD,CAAH,+FAKjB,gBAAEP,EAAF,EAAEA,gBAAF,OAAuBqD,YAAKrD,EAAiB,QAO7CsD,EAAc/C,YAAOgD,KAAV,8EAAGhD,CAAH,oUAHQ,IACD,KAuBlBiD,EAAgBjD,IAAOC,IAAV,gFAAGD,CAAH,+BAUbkD,EAAOlD,IAAOmD,IAAV,uEAAGnD,CAAH,oFACC,gBAAEoD,EAAF,EAAEA,SAAF,OAAgBA,GAAsB,UACrC,gBAAEC,EAAF,EAAEA,UAAF,OAAiBA,GAAwB,SApC5B,KA4CnBC,EAAiBtD,IAAOC,IAAV,iFAAGD,CAAH,wGAGHuD,KAMXC,EAAQxD,YAAOyD,KAAV,wEAAGzD,CAAH,gGArDc,IACD,KA+DlB0D,EAAyB1D,IAAO2D,EAAV,yFAAG3D,CAAH,+BAKtBD,EAAkBC,IAAOC,IAAV,kFAAGD,CAAH,sEAOf4D,EAAkB5D,IAAOC,IAAV,kFAAGD,CAAH,wBAIf6D,EAAa7D,IAAO2D,EAAV,8EAAG3D,CAAH,+OACM,qBAAE8D,gBACb,qBAAEA,gBAUA,qBAAEC,kBACS,qBAAED,gBACN,qBAAEA,gBAoGP1D,IApEU,SAACC,GAAkB,IAExCf,EAEEe,EAFFf,MAAOE,EAELa,EAFKb,SAAUE,EAEfW,EAFeX,UAAWD,EAE1BY,EAF0BZ,gBAAiBG,EAE3CS,EAF2CT,MAAOD,EAElDU,EAFkDV,UACpDqE,EACE3D,EADF2D,WAGIC,EAAWrE,GAASA,EAAMuC,OAASvC,EAAMsE,KAAI,gBAAErE,EAAF,EAAEA,MAAOC,EAAT,EAASA,OAAQqE,EAAjB,EAAiBA,SAAjB,OACjD,kBAACN,EAAD,CACEC,aAAcnE,EACdoE,eAAgBpE,IAAcD,EAAYD,EAAkBC,EAC5D0E,KAAMtE,EACNA,OAAQqE,EAAW,cAAWE,EAC9BC,IAAKxE,EAASD,GAEbA,MAEA,KAEC0E,EAAWN,GAAaA,EAAS9B,OACrC,kBAACyB,EAAD,KAAkBK,GAD4B,KAI1CO,GAAgC,IAApBnE,EAAMd,UAAsB,KAC5C,kBAAC,EAAD,KACE,kBAACkF,EAAD,CACEnE,gBAAiBD,EAAMC,gBACvBC,KAAMF,EAAME,KACZC,qBAAsBH,EAAMG,qBAC5BwB,SAAU3B,EAAM2B,YAKhBoB,EAAWY,GAAcA,EAAWZ,SAAWY,EAAWZ,cAAWiB,EACrEhB,EAAYW,GAAcA,EAAWX,UAAYW,EAAWX,eAAYgB,EACxElB,EAAO3D,EACX,kBAACyD,EAAD,KACE,kBAACC,EAAD,CAAMwB,IAAKlF,EAAUmF,IAAKrF,EAAO8D,SAAUA,EAAUC,UAAWA,KAF5C,KAMxB,OACE,kBAACV,EAAD,KACE,kBAACE,EAAD,CAAmBpD,gBAAiBA,GAClC,kBAACsD,EAAD,KACGI,EACD,kBAACG,EAAD,CACEsB,MAAO,CAACC,WAAYrF,OAAW6E,EAAY,UAE3C,kBAACb,EAAD,CAAOoB,MAAO,CAACE,MAAOpF,IAAaJ,GAClCiF,GAEH,kBAACb,EAAD,CACEU,KAAM,qCACNtE,OAAQ,UAER,kBAACoD,EAAD,CACEwB,IAAKK,IACLJ,IAAK,wEAKZH,K,mBCzNPQ,EAAOC,QAAU,IAA0B","file":"static/js/8.8d49b7c9.chunk.js","sourcesContent":["import React from 'react';\nimport GradientHeader from '../../components/text/headers/GradientHeader';\n\nconst PageNotFound = () => {\n  return (\n    <>\n      <GradientHeader\n        title={'404: The page you are looking for could not be found'}\n        hasSearch={false}\n        imageSrc={''}\n        backgroundColor={'#333'}\n        textColor={'#fff'}\n        linkColor={'#333'}\n        links={[\n          {label: 'Return to Landing Page', target: '/'},\n        ]}\n      />\n    </>\n  );\n};\n\nexport default PageNotFound;","import React, {useState, useEffect} from 'react';\nimport {\n  Label,\n} from '../../styling/styleUtils';\nimport styled from 'styled-components/macro';\nimport DropdownTreeSelect, {TreeNode} from 'react-dropdown-tree-select';\nimport 'react-dropdown-tree-select/dist/styles.css';\nimport './multiTierDropdownStyles.scss';\n\nconst SearchContainer = styled.div`\n  max-width: 400px;\n  margin: auto;\n  text-align: center;\n`;\n\nconst SearchLabel = styled(Label)`\n  text-transform: uppercase;\n  margin-bottom: 0.65rem;\n`;\n\ninterface Props {\n  searchLabelText: string;\n  data: TreeNode[];\n  initialSelectedValue?: TreeNode;\n  onChange?: (val: TreeNode) => void;\n}\n\nconst HeaderWithSearch = (props: Props) => {\n  const {searchLabelText, data, initialSelectedValue} = props;\n\n  const [selectedValue, setSelectedValue] = useState<TreeNode | undefined>(initialSelectedValue);\n\n  useEffect(() => {\n    const keydownListener = (e: KeyboardEvent) => {\n      const focusedElm: HTMLElement | null = document.querySelector('.no-select-parent.disabled.focused i');\n      if (focusedElm && e.keyCode === 13) {\n        focusedElm.click();\n      }\n    };\n    window.addEventListener('keydown', keydownListener);\n    return () => window.removeEventListener('keydown', keydownListener);\n  });\n\n  const onChange = (currentNode: TreeNode, selectedNodes: TreeNode[]) => {\n    if (selectedNodes.length) {\n      setSelectedValue(currentNode);\n      if (props.onChange) {\n        props.onChange(currentNode);\n      }\n    }\n    const activeInput = document.activeElement as HTMLElement;\n    if (activeInput) {\n      activeInput.blur();\n    }\n  };\n\n  const searchPredicate = (node: TreeNode, searchTerm: string) => {\n    return ((node.label && node.label.toLowerCase().indexOf(searchTerm) >= 0) &&\n           !(node.className && node.className.includes('no-select-parent'))) ||\n           searchTerm === ''\n           ? true : false;\n  };\n\n\n  const placeholder = selectedValue && selectedValue.label ? selectedValue.label : 'Type Or Select';\n  const selectedClass = selectedValue && selectedValue.label ? 'mulit-tier-selected' : '';\n  return (\n    <SearchContainer>\n      <SearchLabel>{searchLabelText}</SearchLabel>\n      <DropdownTreeSelect\n        searchPredicate={searchPredicate}\n        className={'multi-tier-dropdown ' + selectedClass}\n        data={data}\n        onChange={onChange}\n        mode={'radioSelect'}\n        keepTreeOnSearch={false}\n        texts={{placeholder}}\n        clearSearchOnChange={true}\n      />\n    </SearchContainer>\n  );\n};\n\nexport default HeaderWithSearch;","import React from 'react';\nimport {\n  StandardH1,\n  secondaryFont,\n} from '../../../styling/styleUtils';\nimport {\n  FullWidthHeader,\n  FullWidthHeaderContent,\n} from '../../../styling/Grid';\nimport styled from 'styled-components/macro';\nimport {TreeNode} from 'react-dropdown-tree-select';\nimport MultiTierSearch from '../../navigation/MultiTierSearch';\nimport GrowthLabLogoImgSrc from './growth-lab.png';\nimport { rgba } from 'polished';\n\nconst Root = styled(FullWidthHeader)`\n  grid-template-rows: auto auto;\n`;\n\nconst GradientContainer = styled.div<{backgroundColor: string}>`\n  padding: 2rem 0 2.5rem;\n  background: linear-gradient(\n    0deg,\n    rgba(255,255,255,0) 0%,\n    ${({backgroundColor}) => rgba(backgroundColor, 0.85)} 100%\n  );\n`;\n\nconst mediumMediaWidth = 1000;\nconst smallMediaWidth = 775;\n\nconst ContentGrid = styled(FullWidthHeaderContent)`\n  display: grid;\n  grid-template-columns: auto 1fr 20%;\n  grid-column-gap: 2rem;\n\n  @media (max-width: ${mediumMediaWidth}px) {\n    grid-template-columns: 9vw 1fr 20vw;\n    margin-bottom: 2rem;\n  }\n\n  @media (max-width: ${smallMediaWidth}px) {\n    grid-template-columns: 9vw 1fr 140px;\n    grid-column-gap: 0.7rem;\n  }\n\n  @media (max-width: 380px) {\n    grid-template-columns: 8vw 1fr 100px;\n    grid-column-gap: 0.7rem;\n  }\n`;\n\nconst LogoContainer = styled.div`\n  grid-column: 1;\n  grid-row: 1;\n`;\n\ninterface ImageProps {\n  imgWidth?: string;\n  imgHeight?: string;\n}\n\nconst Logo = styled.img<ImageProps>`\n  width: ${({imgWidth}) => imgWidth ? imgWidth : '100%'};\n  height: ${({imgHeight}) => imgHeight ? imgHeight : 'auto'};\n\n  @media (max-width: ${mediumMediaWidth}px) {\n    max-width: 100%;\n    max-height: 100%;\n  }\n`;\n\nconst TitleContainer = styled.div`\n  grid-column: 2;\n  grid-row: 1;\n  font-family: ${secondaryFont};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Title = styled(StandardH1)`\n  margin: 0;\n\n  @media (max-width: ${mediumMediaWidth}px) {\n    font-size: 1.7rem;\n  }\n  @media (max-width: ${smallMediaWidth}px) {\n    margin-top: 0;\n  }\n`;\n\nconst GrowthLabLogoContainer = styled.a`\n  grid-column: 3;\n  grid-row: 1;\n`;\n\nconst SearchContainer = styled.div`\n  grid-column: 1 / -1;\n  grid-row: 2;\n  padding: 0 1rem;\n  margin-bottom: 2rem;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: 1.2rem;\n`;\n\nconst ButtonLink = styled.a<{primaryColor: string, secondaryColor: string}>`\n  border: 1px solid ${({primaryColor}) => primaryColor};\n  color: ${({primaryColor}) => primaryColor};\n  font-size: 0.875rem;\n  text-transform: uppercase;\n  text-decoration: none;\n  padding: 0.4rem 0.6rem;\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n  display: inline-block;\n\n  &:hover {\n    color: ${({secondaryColor}) => secondaryColor};\n    background-color: ${({primaryColor}) => primaryColor};\n    border-color: ${({primaryColor}) => primaryColor};\n  }\n`;\n\ninterface LinkDatum {\n  label: string;\n  target: string;\n  internal?: boolean;\n}\n\ninterface BaseProps {\n  title: string;\n  imageSrc?: string;\n  imageProps?: ImageProps;\n  backgroundColor: string;\n  textColor: string;\n  linkColor: string;\n  links?: LinkDatum[];\n}\n\ntype Props = BaseProps & (\n  {\n    hasSearch: false;\n  } | {\n    hasSearch: true;\n    searchLabelText: string;\n    data: TreeNode[];\n    initialSelectedValue?: TreeNode;\n    onChange?: (val: TreeNode) => void;\n  }\n);\n\nconst HeaderWithSearch = (props: Props) => {\n  const {\n    title, imageSrc, textColor, backgroundColor, links, linkColor,\n    imageProps,\n  } = props;\n\n  const linkElms = links && links.length ? links.map(({label, target, internal}) => (\n    <ButtonLink\n      primaryColor={linkColor}\n      secondaryColor={linkColor === textColor ? backgroundColor : textColor}\n      href={target}\n      target={internal ? '_blank' : undefined}\n      key={target + label}\n    >\n      {label}\n    </ButtonLink>\n  )) : null;\n\n  const buttons = !linkElms || !linkElms.length ? null : (\n    <ButtonContainer>{linkElms}</ButtonContainer>\n  );\n\n  const searchBar = props.hasSearch === false ? null : (\n    <SearchContainer>\n      <MultiTierSearch\n        searchLabelText={props.searchLabelText}\n        data={props.data}\n        initialSelectedValue={props.initialSelectedValue}\n        onChange={props.onChange}\n      />\n    </SearchContainer>\n  );\n\n  const imgWidth = imageProps && imageProps.imgWidth ? imageProps.imgWidth : undefined;\n  const imgHeight = imageProps && imageProps.imgHeight ? imageProps.imgHeight : undefined;\n  const img = !imageSrc ? null : (\n    <LogoContainer>\n      <Logo src={imageSrc} alt={title} imgWidth={imgWidth} imgHeight={imgHeight} />\n    </LogoContainer>\n  );\n\n  return (\n    <Root>\n      <GradientContainer backgroundColor={backgroundColor}>\n        <ContentGrid>\n          {img}\n          <TitleContainer\n            style={{gridColumn: imageSrc ? undefined : '1 / 3'}}\n          >\n            <Title style={{color: textColor}}>{title}</Title>\n            {buttons}\n          </TitleContainer>\n          <GrowthLabLogoContainer\n            href={'https://growthlab.cid.harvard.edu/'}\n            target={'_blank'}\n          >\n            <Logo\n              src={GrowthLabLogoImgSrc}\n              alt={'The Growth Lab at Harvard\\'s Center for International Development'}\n            />\n          </GrowthLabLogoContainer>\n        </ContentGrid>\n      </GradientContainer>\n      {searchBar}\n    </Root>\n  );\n};\n\nexport default HeaderWithSearch;","module.exports = __webpack_public_path__ + \"static/media/growth-lab.f0a47c0d.png\";"],"sourceRoot":""}